#!/usr/bin/python3
"""Unittest for BaseGeometry class"""
import unittest
BaseGeometry = __import__('7-base_geometry').BaseGeometry


class TestBaseGeometry(unittest.TestCase):
    """Test cases for BaseGeometry class"""

    def test_area(self):
        """Test area method"""
        bg = BaseGeometry()
        with self.assertRaises(Exception) as context:
            bg.area()
        self.assertEqual(str(context.exception), "area() is not implemented")

    def test_integer_validator_valid(self):
        """Test integer_validator with valid inputs"""
        bg = BaseGeometry()
        bg.integer_validator("test", 1)
        bg.integer_validator("test", 100)

    def test_integer_validator_not_integer(self):
        """Test integer_validator with non-integer inputs"""
        bg = BaseGeometry()
        with self.assertRaises(TypeError) as context:
            bg.integer_validator("test", "not an integer")
        self.assertEqual(str(context.exception), "test must be an integer")

        with self.assertRaises(TypeError) as context:
            bg.integer_validator("test", 1.5)
        self.assertEqual(str(context.exception), "test must be an integer")

    def test_integer_validator_zero_or_negative(self):
        """Test integer_validator with zero or negative inputs"""
        bg = BaseGeometry()
        with self.assertRaises(ValueError) as context:
            bg.integer_validator("test", 0)
        self.assertEqual(str(context.exception), "test must be greater than 0")

        with self.assertRaises(ValueError) as context:
            bg.integer_validator("test", -1)
        self.assertEqual(str(context.exception), "test must be greater than 0")

    def test_integer_validator_types(self):
        """Test integer_validator with different types"""
        bg = BaseGeometry()
        with self.assertRaises(TypeError):
            bg.integer_validator("test", None)
        with self.assertRaises(TypeError):
            bg.integer_validator("test", [])
        with self.assertRaises(TypeError):
            bg.integer_validator("test", {})
        with self.assertRaises(TypeError):
            bg.integer_validator("test", (1,))


if __name__ == '__main__':
    unittest.main()