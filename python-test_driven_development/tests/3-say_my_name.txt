#!/usr/bin/python3
import unittest
from io import StringIO
import sys
from your_module import say_my_name  # Remplacez "your_module" par le nom du fichier où se trouve la fonction

class TestSayMyName(unittest.TestCase):

    def setUp(self):
        self.held, sys.stdout = sys.stdout, StringIO()

    def tearDown(self):
        sys.stdout = self.held

    def test_valid_names(self):
        say_my_name("John", "Doe")
        self.assertEqual(sys.stdout.getvalue().strip(), "My name is John Doe")

    def test_valid_first_name_only(self):
        say_my_name("John")
        self.assertEqual(sys.stdout.getvalue().strip(), "My name is John ")

    def test_first_name_not_string(self):
        with self.assertRaises(TypeError) as cm:
            say_my_name(123)
        self.assertEqual(str(cm.exception), "first_name must be a string")

    def test_last_name_not_string(self):
        with self.assertRaises(TypeError) as cm:
            say_my_name("John", 123)
        self.assertEqual(str(cm.exception), "last_name must be a string")

    def test_empty_names(self):
        say_my_name("", "")
        self.assertEqual(sys.stdout.getvalue().strip(), "My name is  ")

    def test_spaces_as_names(self):
        say_my_name(" ", " ")
        self.assertEqual(sys.stdout.getvalue().strip(), "My name is   ")

    def test_special_characters(self):
        say_my_name("Jöhn", "Døe")
        self.assertEqual(sys.stdout.getvalue().strip(), "My name is Jöhn Døe")

if __name__ == '__main__':
    unittest.main()
